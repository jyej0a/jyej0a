---
description: 블로그 포스트 작성 가이드 - pages/ 폴더 형식
globs: pages/*.md
---

# 블로그 포스트 작성 규칙

## 📝 파일 구조

블로그 포스트는 반드시 다음 형식을 따라야 합니다:

### Front Matter (상단 메타데이터)
```markdown
---
title: '블로그 제목'
date: YYYY-MM-DD (예: 2025-01-26)
tags: ['태그1', '태그2', '태그3']
category: '카테고리명'
description: '게시글에 대한 간단한 설명'
---
```

### 필수 필드
- **title**: 게시글 제목 (따옴표로 감싸기)
- **date**: 작성 날짜 (YYYY-MM-DD 형식)
- **tags**: 태그 배열 (최소 2개 이상)
- **category**: 카테고리 (예: Development, Tutorial, Web 등)
- **description**: SEO 및 목록 페이지용 설명

## 🔍 최신 정보 수집 (필수)

블로그 포스트를 작성하기 전에 **반드시 웹 검색**을 실시하세요:

1. **주제 검색**: 주제에 대한 최신 정보, 동향, 모범 사례를 검색
2. **예제 코드 검색**: 기술 관련 게시글의 경우 최신 버전의 공식 문서나 예제를 검색
3. **관련 링크 수집**: 참고할 수 있는 공식 문서나 유용한 리소스 링크를 찾아서 포함

## 📄 마크다운 작성 가이드

### 제목 구조
```markdown
# 제목 (H1 - 게시글 자체 제목이므로 보통 사용하지 않음)
## 섹션 제목 (H2)
### 하위 섹션 (H3)
#### 더 작은 제목 (H4)
```

### 코드 블록
- 언어 태그를 명시하세요: ` ```javascript `, ` ```python ` 등
- 예시 코드는 실행 가능하고 이해하기 쉽게 작성

### 기타 마크다운 요소
- **볼드**: `**텍스트**`
- *이탤릭*: `*텍스트*`
- 링크: `[텍스트](URL)`
- 리스트: `-` 또는 `1.`
- 인라인 코드: `` `코드` ``

## 📁 파일 저장

- 파일은 `pages/` 폴더에 저장
- 파일명: kebab-case 사용 (예: `my-blog-post.md`)
- 파일명은 의미있고 검색 가능하도록 작성

## ✨ 품질 기준

1. **정확성**: 최신 정보를 반영하고 공식 문서를 참고
2. **가독성**: 명확하고 이해하기 쉬운 문체 사용
3. **완성도**: 코드 예제는 실행 가능하며 설명이 충분
4. **구조**: 논리적인 섹션으로 나누어 작성
5. **한국어**: 모든 내용은 한국어로 작성

## 🚀 작업 순서

블로그 게시글을 작성할 때는 다음 순서를 따르세요:

1. **웹 검색**: 주제에 대한 최신 정보 수집
2. **Front Matter 작성**: 메타데이터 작성
3. **본문 작성**: 마크다운 형식으로 게시글 내용 작성
4. **검토**: 오타, 문법, 링크 유효성 확인
5. **저장**: `pages/` 폴더에 `.md` 파일로 저장

## 📌 참고 파일

- 예시: [pages/example.md File](mdc:pages/example.md)
- 메타데이터 형식: [posts.json File](mdc:posts.json)
- 상세 가이드: [docs/Plan.md File](mdc:docs/Plan.md)

## ⚠️ 주의사항

- 날짜 형식은 반드시 `YYYY-MM-DD`를 따르세요
- 태그는 배열 형식으로 작성하세요
- title과 description은 따옴표로 감싸세요
- Front Matter와 본문 사이에 빈 줄이 있어야 합니다

## 필수 사항

블로그 글을 작성하고 나서 항상
 `node .github/scripts/generate-posts.js`를 실행하여 posts.json 파일을 생성하세요라이